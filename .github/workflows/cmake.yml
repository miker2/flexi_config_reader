name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2

    - name: Install dependencies
      run: |
        sudo apt-get install -y ninja-build python-is-python3

    - uses: actions/checkout@v2
      with:
        repository: jcoglan/canopy.git
        ref: main
        path: ./canopy

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

    - name: Generate python parsers
      run: |
        pushd ${{github.workspace}}/canopy
        npm install
        make test-python
        popd
        pushd ${{github.workspace}}/python
        ${{github.workspace}}/canopy/bin/canopy maps.peg --lang python
        popd

    - uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - name: Run python tests
      run: |
        pushd ${{github.workspace}}/python
        python3 maps_test.py
        python3 -m unittest discover -v
        popd

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ctest -C ${{env.BUILD_TYPE}}
        ${{github.workspace}}/build/c++/jsonish_test
        ${{github.workspace}}/build/c++/include_file_test
        ${{github.workspace}}/build/c++/config_test

