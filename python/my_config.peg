  map        <-  _ (struct / proto / reference / COMMENT)+
  struct     <-  STRUCTs KEY TAIL STRUCTc END _
  proto      <-  PROTOs KEY TAIL STRUCTc END _
  reference  <-  REFs FLAT_KEY _ "as" _ KEY TAIL REFc END _
  STRUCTs    <-  "struct" SP
  PROTOs     <-  "proto" SP
  REFs       <-  "reference" SP
  END        <-  "end" SP KEY
  STRUCTc    <-  (struct / PAIR / reference / proto / COMMENT)+
  REFc       <-  (REF_VARSUB / REF_VARADD)+
  PAIR       <-  KEY KVs (value / VAR_REF / VAR) TAIL
  FULLPAIR   <-  FLAT_KEY KVs (value / VAR) TAIL
  REF_VARSUB <-  VAR KVs value TAIL
  REF_VARADD <-  "+" KEY KVs value TAIL
  FLAT_KEY   <-  KEY ("." KEY)+
  KEY        <-  [a-z] [a-zA-Z0-9_]*
  value      <-  list / HEX / NUMBER / STRING
  CHAR        <- "\\" ['"\\] / !"\\" .
  STRING     <-  ["] (!["\\] CHAR)* ["]
  list       <-  SBo value (COMMA value)* SBc
  NUMBER     <-  (!HEX) [-+]? [0-9]+ ("." [0-9]*)? ("e" [-+]? [0-9]+)?
  VAR        <-  "$" [A-Z0-9_]+
  VAR_REF    <-  "$(" FLAT_KEY ")"
  HEX        <-  "0" [xX] [0-9a-fA-F]+
  KVs        <-  oSP "=" oSP
  CBo        <-  "{" oSP
  CBc        <-  oSP "}" _
  SBo        <-  "[" oSP
  SBc        <-  oSP "]"
  COMMA      <-  oSP "," oSP
  TAIL       <-  _ (COMMENT)*
#  COMMENT    <-  "#" (!NL .)* _
  COMMENT    <-  "#" non_eol* _
  non_ascii  <-  [\x80-\uD7FF\uE000-\uFFFF]
  non_eol    <-  [\x09\x20-\x7F] / non_ascii
  SP_c       <-  [ \t]
  oSP        <-  SP_c*
  SP         <-  SP_c+
  NL         <-  ([\r\n] / "\r\n")+
  _          <-  [ \t\r\n]*