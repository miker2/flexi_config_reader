

include config_example6.cfg
include nested/nested_flat_include.cfg

struct protos {

    proto joint_proto {
      leg = $LEG
      dof = "${LEG}.$DOF"  # An example of using variables in a string
      list = ["${DOF}", "two", "$LEG"]
    }

    proto leg_proto {
      key_1 = "foo"
      key_2 = "bar"
      key_3 = $LEG

      reference protos.joint_proto as hx  {  # Can we make the 'hx' here be represented by $DOF?
        $DOF = $PARENT_NAME
        +extra_key = 1.e-3
      }
    }
}

# This is a multi-
# line comment (sort
# of)

struct outer   {
    my_key = "foo"
    n_key = 1
    var_ref = $(outer.fl.key_3)

    struct inner {   # Another comment "here"
      key = 1
      #pair = "two"
      val  = 1.232e10

      struct test1   {
        # Multi-line lists are handled
        key = [-0.123, 1.23e2
            , 1.023] # -5

        with_expression = [$(outer.inner.val), 1, {{ 2^12 }}, 3]
      }

      key_after = 3

      key_w_str = [
        "one",
        "two", "five", "three"
      ]
    }

    key_between = 4

    reference protos.leg_proto as fl {
      $LEG = $PARENT_NAME
      $DOF = "hx"
    }

    multi_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]]

    deep_multi_list = [[[1], [2, 3]], [[4, 5], [6]], [[7, 8], [9, 10]]]

    multi_array = [[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]]
}
